#
#
#         Name: makefile (rules file for 'make') from makefile.in
#       Author: Rick Troth, rogue programmer
#         Date: 2023-07-07 (Friday) just before Israel
#         Note: this makefile configured for %SYSTEM%
#
#

APPLID          =       ductwork
VERSION         =       2.1.4

PROJECTURL      =       http://www.casita.net/pub/ductwork/src
LOCALE          =       en_US

##### configuration #####

PREFIX          =       %PREFIX%
CFLAGS          =       %CFLAGS% -DPREFIX=\"$(PREFIX)\"
LDFLAGS         =       %LDFLAGS%
SHFLAGS         =       %SHFLAGS%
# we may later use CC, CXX, CPP, CPPFLAGS, and/or CXXFLAGS

EXE             =       
OBJ             =       .o
LIB             =       .a
DLL             =       .so

CFLAGS          =       %CFLAGS% -I.
PREFIX          =       %PREFIX%
LDFLAGS         =       %LDFLAGS% -L. -lxfl -lxmitmsgx
SHFLAGS         =       %SHFLAGS%
# we may later use CC, CXX, CPP, CPPFLAGS, and/or CXXFLAGS

##### configuration #####

DELIVERABLES    =       pipe$(EXE) libxfl$(LIB) libxmitmsgx$(LIB)

MKAR            =       $(AR) r

# identify targets without actual files to match
.PHONY:         _default all clean distclean veryclean help \
                libraries

# first target serves as the default, but name it that way anyway
_default:       $(DELIVERABLES)

all:            $(DELIVERABLES)

# pseudo target to build static and shared libraries
libraries:      libxfl$(LIB) libxfl$(DLL)

# fetch the source from GitHub
pipe.c:
		@echo "$(MAKE): you need $@"
		wget $(PROJECTURL)/$@

#
pipe.o:         makefile pipe.c
		$(CC) $(CFLAGS) -o pipe.o -c pipe.c

#
pipe:           makefile pipe.o xfllib.o xmitmsgx.o
		$(CC) $(LDFLAGS) -o pipe pipe.o xfllib.o xmitmsgx.o

#
xfllib.c:
		@echo "$(MAKE): fetching the library source"
		wget $(PROJECTURL)/$@

#
xfllib.o:       xfllib.c xfl.h
		@echo "$(MAKE): compiling the library ..."
		$(CC) $(CFLAGS) -o xfllib.o -c xfllib.c

#
libxfl$(LIB):   xfllib.o
		@echo "$(MAKE): building the library ..."
		@rm -f libxfl$(LIB)
		$(MKAR) libxfl$(LIB) xfllib.o

#
libxfl$(DLL):   xfllib.o
		$(CC) $(LDFLAGS) -shared -o libxfl$(DLL) xfllib.o


#
xmitmsgx.h:
		$(MAKE) -C xmitmsgx xmitmsgx.h
		cp -p xmitmsgx/xmitmsgx.h .

#
xmitmsgx.o:
		$(MAKE) -C xmitmsgx xmitmsgx.o
		cp -p xmitmsgx/xmitmsgx.o .

#
libxmitmsgx$(LIB):
		$(MAKE) -C xmitmsgx libxmitmsgx$(LIB)
		cp -p xmitmsgx/libxmitmsgx$(LIB) .


########################################################################
# Rexx support
rexx:           libxflrexx.so

xflrexx.o:      makefile xflrexx.c xfl.h
		$(CC) $(CFLAGS) -o xflrexx.o -c xflrexx.c

libxflrexx.so:  xflrexx.o xmitmsgx.o
		$(CC) $(LDFLAGS) -shared -o libxflrexx.so xflrexx.o xfllib.o xmitmsgx.o


#
# yeah, we need an "install" target
install:        $(DELIVERABLES)
		@mkdir -p $(PREFIX)/bin $(PREFIX)/lib $(PREFIX)/include \
		  $(PREFIX)/share/locale/$(LOCALE) $(PREFIX)/sbin # $(PREFIX)/src
#		cp -p xmitmsg xmiterr $(PREFIX)/bin/.
#		cp -p libxmitmsgx.a *.so $(PREFIX)/lib/.
#		cp -p xmitmsgx.h $(PREFIX)/include/.
#		cp -p xmitmsgx.msgs errno.msgs $(PREFIX)/share/locale/$(LOCALE)/.
#		cp -p xmitmivp.sh $(PREFIX)/sbin/.

#$(PREFIX)/share/locale/$(LOCALE)/$(APPLID).msgs
#$(PREFIX)/share/locale/$(LOCALE)/$(APPLID).msgs
#$(PREFIX)/lib/nls/msg/$(LOCALE)/$(APPLID).msgs
#$(PREFIX)/lib/locale/$(LOCALE)/$(APPLID).msgs
#$(PREFIX)/share/nls/$(LOCALE)/$(APPLID).msgs

#
makefile:       makefile.in configure
	@echo "$(MAKE): makefile is out of synch"
	@echo "$(MAKE): you need to re-run ./configure"
	@false

# fetch the sources from GitHub
makefile.in:
		@echo "$(MAKE): you need $@"
		wget $(PROJECTURL)/$@

configure:
		@echo "$(MAKE): you need $@"
		wget $(PROJECTURL)/$@

# reset things for a fresh build from source
clean:
		rm -f *.o *.a *.so *.dylib *.rpm *.class *$(LIB) *$(DLL)
		$(MAKE) -C xmitmsgx clean
		$(MAKE) -C stages clean

distclean:      clean
		@rm configure.h configure.sh

veryclean:      distclean

help:


#
# 'make' tips:
# $@ is the target
# $+ is the list of dependencies but does not work everywhere
#


